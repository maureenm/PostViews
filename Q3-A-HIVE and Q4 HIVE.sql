--Q3. Create table in Hive, load HDFS cleaned data into Hive
--EXECUTE HIVE
hive

--CREATE DATABASE SO AS NOT TO USE THE DEFAULT ONE
CREATE DATABASE db1;

--USE THE NEW DATABASE
use db1;

--CREATE A TABLE TO STORE YOUR DATASET. FIELDS TERMINATED BY PIPE BECAUSE WE STORED THE FILE AS PIPE DELIMITED IN PIG
CREATE TABLE IF NOT EXISTS sodataset (id int, score int, owneruserid int, body string) ROW FORMAT DELIMITED FIELDS TERMINATED BY '|';

--LOAD IN OUR CLEAN DATASET FROM HDFS TO OUR NEW TABLE. INCASE THERE IS ANY DATA ALREADY IN THE TABLE WE WILL OVERWRITE
LOAD DATA INPATH 'hdfs://cluster-mycluster-m/clean_data' OVERWRITE INTO TABLE sodataset;

--CONFIRM DATA LOADED CORRECTLY
SELECT * FROM sodataset LIMIT 3;



--QUERYING DATASET: 3. USING HIVE AND/OR MAPREDUCE:
--Q2.1 THE TOP 10 POSTS BY SCORE
--LIMIT RESULTS BY 10 BECAUSE WE WANT 10. ORDER SCORE BY DESCENDING BECAUSE WE WANT THE HIGHEST SCORE VALUES
SELECT id, score FROM sodataset ORDER BY score DESC LIMIT 10;

--Q2.2 THE TOP 10 USERS BY POST SCORE
SELECT owneruserid, sum_score FROM ( SELECT owneruserid, SUM(score) AS sum_score FROM sodataset group by owneruserid ) AS result ORDER BY sum_score DESC LIMIT 10;

--Q2.3 THE NUMBER OF DISTINCT USERS, WHO USED THE WORD “HADOOP” IN ONE OF THEIR POSTS
--DID NOT SEARCH FOR LOWERCASE HADOOP AS QUESTION SPECIFICALLY ASKED FOR “Hadoop”
--IF YOU RUN THIS COMMAND WITH LIKE 'hadoop' YOU WILL GET 169 RETURNED.
SELECT COUNT(DISTINCT owneruserid) FROM sodataset WHERE body LIKE '%Hadoop%';


--Q4. USING MAPREDUCE CALCULATE THE PER-USER TF-IDF (JUST SUBMIT THE TOP 10 TERMS FOR EACH OF THE TOP 10 USERS FROM QUERY 3.2
--CREATED A TABLE TO STORE 10 TOP USERS TO USE IN QUESTION 4
--CREATE TABLE topTenUsers ROW FORMAT DELIMITED FIELDS TERMINATED BY '|' AS SELECT owneruserid, SUM(score) as sum_score FROM sodataset GROUP BY owneruserid ORDER BY sum_score DESC LIMIT 10;
CREATE TABLE IF NOT EXISTS topTenUsers ROW FORMAT DELIMITED FIELDS TERMINATED BY '|' AS SELECT owneruserid, SUM(score) as sum_score FROM sodataset GROUP BY owneruserid ORDER BY sum_score DESC LIMIT 10;

--FOR EACH TOP USE GET THEIR POSTS
CREATE TABLE IF NOT EXISTS topTenUsrPosts AS SELECT owneruserid, body FROM sodataset WHERE owneruserid IN (SELECT owneruserid FROM topTenUsers) GROUP BY owneruserid, body;

--SAVE THIS TABLE IN HDFS SO WE CAN USE IT LATER ON IN Q4
INSERT OVERWRITE DIRECTORY '/assigone/resultsFromHive' ROW FORMAT DELIMITED FIELDS TERMINATED BY ',' SELECT owneruserid, body FROM topTenUsrPosts GROUP BY owneruserid, body;

--QUIT HIVE
quit;